names(non_nav_data)[6] <- 'SBSOD'
names(non_nav_data)[7] <- 'MiniCog'
names(non_nav_data)[8] <- 'TrailsA'
names(non_nav_data)[9] <- 'TrailsB'
names(non_nav_data)[10] <- 'SetShifting'
names(non_nav_data)[11] <- 'CorsiBlocks'
names(non_nav_data)[12] <- 'SSQ_Pre'
names(non_nav_data)[13] <- 'SSQ_Post'
names(non_nav_data)[14] <- 'NARA'
non_nav_data <- head(non_nav_data)
View(non_nav_data)
non_nav_data <- read.csv('/Users/yasminebassil/Desktop/Data/non_nav_data.csv')
# Tidying up the data
names(non_nav_data)[1] <- 'Participant'
names(non_nav_data)[2] <- 'Age'
names(non_nav_data)[3] <- 'PSQI'
names(non_nav_data)[4] <- 'SSS_Pre'
names(non_nav_data)[5] <- 'SSS_Post'
names(non_nav_data)[6] <- 'SBSOD'
names(non_nav_data)[7] <- 'MiniCog'
names(non_nav_data)[8] <- 'TrailsA'
names(non_nav_data)[9] <- 'TrailsB'
names(non_nav_data)[10] <- 'SetShifting'
names(non_nav_data)[11] <- 'CorsiBlocks'
names(non_nav_data)[12] <- 'SSQ_Pre'
names(non_nav_data)[13] <- 'SSQ_Post'
names(non_nav_data)[14] <- 'NARA'
View(non_nav_data)
b1 <- subset(nav_data, Block_num == 1)
rownames(b1) <- NULL
b2 <- subset(nav_data, Block_num == 2)
rownames(b2) <- NULL
b3 <- subset(nav_data, Block_num == 3)
rownames(b3) <- NULL
change <- subset(b3, select = c(Participant))
for (i in 1:nrow(b3)) {
change$Total_Time[i] <- b3$Total_Time[i] - b1$Total_Time[i]
change$Orientation_Time[i] <- b3$Orientation_Time[i] - b1$Orientation_Time[i]
change$Navigation_Time[i] <- b3$Navigation_Time[i] - b1$Navigation_Time[i]
change$Distance[i] <- b3$Distance[i] - b1$Distance[i]
change$Speed[i] <- b3$Speed[i] - b1$Speed[i]
change$Mean_Dwell[i] <- b3$Mean_Dwell[i] - b1$Mean_Dwell[i]
change$Var_X[i] <- b3$Var_X[i] - b1$Var_X[i]
change$Var_Y[i] <- b3$Var_Y[i] - b1$Var_Y[i]
change$Var_Z[i] <- b3$Var_Z[i] - b1$Var_Z[i]
change$Teleportations[i] <- b3$Teleportations[i] - b1$Teleportations[i]
}
all_blocks <- aggregate(cbind(Total_Time, Orientation_Time, Navigation_Time,
Distance, Speed, Mean_Dwell, Var_X, Var_Y, Var_Z,
Teleportations) ~ Participant,
data = nav_data, FUN = mean)
all_blocks$NARA <- non_nav_data$NARA
p_corr_ctdt <- ggplot(all_blocks, aes(x=Total_Time, y=Distance)) +
geom_point()+
geom_smooth(method=lm)+
xlab("Completion Time")
p_corr_ctdt
p_corr_ctdt <- ggplot(all_blocks, aes(x=Total_Time, y=Distance)) +
geom_point()+
geom_smooth(method=lm)+
xlab("Completion Time")+
ylab("Distance Traveled")
p_corr_ctdt
corr_ctdt <- cor.test(all_blocks$Total_Time, all_blocks$Distance)
corr_ctdt
View(all_blocks)
# This code chunk loads various libraries necessary to complete the data analysis and produce graphics
library(tidyverse)
library(stringr)
library(ez)
library(cowplot)
library(viridis)
library(viridisLite)
library("readxl")
library("ggcorrplot")
library(dplyr)
library(ltm)
library(plotrix)
library("viridis")
library("paletteer")
library(ggpubr)
library(rstatix)
library(lme4)
#install.packages("lmerTest")
library(lmerTest)
#install.packages('emmeans')
library('emmeans')
#This data chunk loads and tidies up the data
#This loads the data file as the variable "data"
data <- read.csv('/Users/yasminebassil/Desktop/YA_Data/averaged_results.csv')
# Tidying up the data
names(data)[1] <- 'index'
names(data)[2] <- 'Participant'
names(data)[3] <- 'Block_num'
names(data)[4] <- 'Total_Time'
names(data)[5] <- 'Orientation_Time'
names(data)[6] <- 'Navigation_Time'
names(data)[7] <- 'Distance'
names(data)[8] <- 'Speed'
names(data)[9] <- 'Mean_Dwell'
names(data)[10] <- 'Teleportations'
data <- data[ -c(1) ]
data$Block_num <- as.factor(data$Block_num)
sapply(data, class)
data
#This loads the data file as the variable "data"
nav_data <- read.csv('/Users/yasminebassil/Desktop/YA_Data/merged_results.csv')
# Tidying up the data
names(nav_data)[1] <- 'index'
names(nav_data)[2] <- 'Participant'
names(nav_data)[3] <- 'Block_num'
names(nav_data)[4] <- 'Target_Name'
names(nav_data)[5] <- 'Total_Time'
names(nav_data)[6] <- 'Orientation_Time'
names(nav_data)[7] <- 'Navigation_Time'
names(nav_data)[8] <- 'Distance'
names(nav_data)[9] <- 'Speed'
names(nav_data)[10] <- 'Mean_Dwell'
names(nav_data)[11] <- 'Teleportations'
nav_data$Block_num <- as.factor(nav_data$Block_num)
sapply(nav_data, class)
desired_order <- c("Automobile shop", "Police station ", "Fire Station", "Bank", "Pawn Shop", "Pizzeria", "Quattroki Restaurant", "High School")
# Reorder the levels of Target_Name
nav_data$Target_Name <- factor(nav_data$Target_Name, levels = desired_order)
#This loads the data file as the variable "data"
non_nav_data <- read.csv('/Users/yasminebassil/Desktop/YA_Data/non_nav_data.csv')
# Tidying up the data
names(non_nav_data)[1] <- 'Participant'
names(non_nav_data)[2] <- 'Age'
names(non_nav_data)[3] <- 'PSQI'
names(non_nav_data)[4] <- 'SSS_Pre'
names(non_nav_data)[5] <- 'SSS_Post'
names(non_nav_data)[6] <- 'SBSOD'
names(non_nav_data)[7] <- 'MiniCog'
names(non_nav_data)[8] <- 'TrailsA'
names(non_nav_data)[9] <- 'TrailsB'
names(non_nav_data)[10] <- 'SetShifting'
names(non_nav_data)[11] <- 'CorsiBlocks'
names(non_nav_data)[12] <- 'SSQ_Pre'
names(non_nav_data)[13] <- 'SSQ_Post'
names(non_nav_data)[14] <- 'NARA'
b1 <- subset(nav_data, Block_num == 1)
rownames(b1) <- NULL
b2 <- subset(nav_data, Block_num == 2)
rownames(b2) <- NULL
b3 <- subset(nav_data, Block_num == 3)
rownames(b3) <- NULL
change <- subset(b3, select = c(Participant, Target_Name))
for (i in 1:nrow(b3)) {
change$Total_Time[i] <- b3$Total_Time[i] - b1$Total_Time[i]
change$Orientation_Time[i] <- b3$Orientation_Time[i] - b1$Orientation_Time[i]
change$Navigation_Time[i] <- b3$Navigation_Time[i] - b1$Navigation_Time[i]
change$Distance[i] <- b3$Distance[i] - b1$Distance[i]
change$Speed[i] <- b3$Speed[i] - b1$Speed[i]
change$Mean_Dwell[i] <- b3$Mean_Dwell[i] - b1$Mean_Dwell[i]
change$Teleportations[i] <- b3$Teleportations[i] - b1$Teleportations[i]
}
b1$Target_Name <- factor(b1$Target_Name, levels = desired_order)
b2$Target_Name <- factor(b2$Target_Name, levels = desired_order)
b3$Target_Name <- factor(b3$Target_Name, levels = desired_order)
change$Target_Name <- factor(change$Target_Name, levels = desired_order)
b1_targets <- b1 %>%
group_by(Target_Name) %>%
summarize(Total_Time_m = mean(Total_Time),
Total_Time_se = std.error(Total_Time),
Orientation_Time_m = mean(Orientation_Time),
Orientation_Time_se = std.error(Orientation_Time),
Navigation_Time_m = mean(Navigation_Time),
Navigation_Time_se = std.error(Navigation_Time),
Distance_m = mean(Distance),
Distance_se = std.error(Distance),
Speed_m = mean(Speed),
Speed_se = std.error(Speed),
Mean_Dwell_m = mean(Mean_Dwell),
Mean_Dwell_se = std.error(Mean_Dwell),
Teleportations_m = mean(Teleportations),
Teleportations_se = std.error(Teleportations))
b1_targets$Block_num <- as.factor(1)
b2_targets <- b2 %>%
group_by(Target_Name) %>%
summarize(Total_Time_m = mean(Total_Time),
Total_Time_se = std.error(Total_Time),
Orientation_Time_m = mean(Orientation_Time),
Orientation_Time_se = std.error(Orientation_Time),
Navigation_Time_m = mean(Navigation_Time),
Navigation_Time_se = std.error(Navigation_Time),
Distance_m = mean(Distance),
Distance_se = std.error(Distance),
Speed_m = mean(Speed),
Speed_se = std.error(Speed),
Mean_Dwell_m = mean(Mean_Dwell),
Mean_Dwell_se = std.error(Mean_Dwell),
Teleportations_m = mean(Teleportations),
Teleportations_se = std.error(Teleportations))
b2_targets$Block_num <- as.factor(2)
b3_targets <- b3 %>%
group_by(Target_Name) %>%
summarize(Total_Time_m = mean(Total_Time),
Total_Time_se = std.error(Total_Time),
Orientation_Time_m = mean(Orientation_Time),
Orientation_Time_se = std.error(Orientation_Time),
Navigation_Time_m = mean(Navigation_Time),
Navigation_Time_se = std.error(Navigation_Time),
Distance_m = mean(Distance),
Distance_se = std.error(Distance),
Speed_m = mean(Speed),
Speed_se = std.error(Speed),
Mean_Dwell_m = mean(Mean_Dwell),
Mean_Dwell_se = std.error(Mean_Dwell),
Teleportations_m = mean(Teleportations),
Teleportations_se = std.error(Teleportations))
b3_targets$Block_num <- as.factor(3)
allblocks_targets <- rbind(b1_targets, b2_targets, b3_targets)
View(allblocks_targets)
write.csv(allblocks_targets, "/Users/yasminebassil/Documents/Emory/3_Research/Projects/CogMap_Paper/data/target_avg_data.csv")
knitr::opts_chunk$set(echo=FALSE, warning=FALSE, message=FALSE)
# This code chunk loads various libraries necessary to complete the data analysis and produce graphics
library(tidyverse)
library(stringr)
library(ez)
library(cowplot)
library(viridis)
library(viridisLite)
library("readxl")
library("ggcorrplot")
library(dplyr)
library(ltm)
library(plotrix)
library("viridis")
library("paletteer")
library(ggpubr)
library(rstatix)
library(lme4)
#install.packages("lmerTest")
library(lmerTest)
#install.packages('emmeans')
library('emmeans')
#This data chunk loads and tidies up the data
#This loads the data file as the variable "data"
data <- read.csv('/Users/yasminebassil/Desktop/YA_Data/averaged_results.csv')
# Tidying up the data
names(data)[1] <- 'index'
names(data)[2] <- 'Participant'
names(data)[3] <- 'Block_num'
names(data)[4] <- 'Total_Time'
names(data)[5] <- 'Orientation_Time'
names(data)[6] <- 'Navigation_Time'
names(data)[7] <- 'Distance'
names(data)[8] <- 'Speed'
names(data)[9] <- 'Mean_Dwell'
names(data)[10] <- 'Teleportations'
data <- data[ -c(1) ]
data$Block_num <- as.factor(data$Block_num)
sapply(data, class)
data
#This loads the data file as the variable "data"
nav_data <- read.csv('/Users/yasminebassil/Desktop/YA_Data/merged_results.csv')
# Tidying up the data
names(nav_data)[1] <- 'index'
names(nav_data)[2] <- 'Participant'
names(nav_data)[3] <- 'Block_num'
names(nav_data)[4] <- 'Target_Name'
names(nav_data)[5] <- 'Total_Time'
names(nav_data)[6] <- 'Orientation_Time'
names(nav_data)[7] <- 'Navigation_Time'
names(nav_data)[8] <- 'Distance'
names(nav_data)[9] <- 'Speed'
names(nav_data)[10] <- 'Mean_Dwell'
names(nav_data)[11] <- 'Teleportations'
nav_data <- nav_data[ -c(1) ]
nav_data$Block_num <- as.factor(nav_data$Block_num)
sapply(nav_data, class)
desired_order <- c("Automobile shop", "Police station ", "Fire Station", "Bank", "Pawn Shop", "Pizzeria", "Quattroki Restaurant", "High School")
# Reorder the levels of Target_Name
nav_data$Target_Name <- factor(nav_data$Target_Name, levels = desired_order)
#This loads the data file as the variable "data"
non_nav_data <- read.csv('/Users/yasminebassil/Desktop/YA_Data/non_nav_data.csv')
# Tidying up the data
names(non_nav_data)[1] <- 'Participant'
names(non_nav_data)[2] <- 'Age'
names(non_nav_data)[3] <- 'PSQI'
names(non_nav_data)[4] <- 'SSS_Pre'
names(non_nav_data)[5] <- 'SSS_Post'
names(non_nav_data)[6] <- 'SBSOD'
names(non_nav_data)[7] <- 'MiniCog'
names(non_nav_data)[8] <- 'TrailsA'
names(non_nav_data)[9] <- 'TrailsB'
names(non_nav_data)[10] <- 'SetShifting'
names(non_nav_data)[11] <- 'CorsiBlocks'
names(non_nav_data)[12] <- 'SSQ_Pre'
names(non_nav_data)[13] <- 'SSQ_Post'
names(non_nav_data)[14] <- 'NARA'
b1 <- subset(nav_data, Block_num == 1)
rownames(b1) <- NULL
b2 <- subset(nav_data, Block_num == 2)
rownames(b2) <- NULL
b3 <- subset(nav_data, Block_num == 3)
rownames(b3) <- NULL
mean_data <- subset(b3, select = c(Participant))
for (i in 1:nrow(b3)) {
mean_data$Total_Time[i] <- (b3$Total_Time[i] + b2$Total_Time[i]+b1$Total_Time[i])/3
mean_data$Orientation_Time[i] <- (b3$Orientation_Time[i] + b2$Orientation_Time[i]+b1$Orientation_Time[i])/3
mean_data$Navigation_Time[i] <- (b3$Navigation_Time[i] + b2$Navigation_Time[i]+b1$Navigation_Time[i])/3
mean_data$Distance[i] <- (b3$Distance[i] + b2$Distance[i]+b1$Distance[i])/3
mean_data$Speed[i] <- (b3$Speed[i] + b2$Speed[i]+b1$Speed[i])/3
mean_data$Mean_Dwell[i] <- (b3$Mean_Dwell[i] + b2$Mean_Dwell[i]+b1$Mean_Dwell[i])/3
mean_data$Teleportations[i] <- (b3$Teleportations[i] + b2$Teleportations[i]+b1$Teleportations[i])/3
}
mean_data_corr <- subset(mean_data, select = -c(Participant))
change <- subset(b3, select = c(Participant, Target_Name))
for (i in 1:nrow(b3)) {
change$Total_Time[i] <- b3$Total_Time[i] - b1$Total_Time[i]
change$Orientation_Time[i] <- b3$Orientation_Time[i] - b1$Orientation_Time[i]
change$Navigation_Time[i] <- b3$Navigation_Time[i] - b1$Navigation_Time[i]
change$Distance[i] <- b3$Distance[i] - b1$Distance[i]
change$Speed[i] <- b3$Speed[i] - b1$Speed[i]
change$Mean_Dwell[i] <- b3$Mean_Dwell[i] - b1$Mean_Dwell[i]
change$Var_X[i] <- b3$Var_X[i] - b1$Var_X[i]
change$Var_Y[i] <- b3$Var_Y[i] - b1$Var_Y[i]
change$Var_Z[i] <- b3$Var_Z[i] - b1$Var_Z[i]
change$Teleportations[i] <- b3$Teleportations[i] - b1$Teleportations[i]
}
b1$Target_Name <- factor(b1$Target_Name, levels = desired_order)
b2$Target_Name <- factor(b2$Target_Name, levels = desired_order)
b3$Target_Name <- factor(b3$Target_Name, levels = desired_order)
change$Target_Name <- factor(change$Target_Name, levels = desired_order)
target_data <- nav_data %>%
group_by(Participant, Target_Name) %>%
summarize(Total_Time = mean(Total_Time),
Orientation_Time = mean(Orientation_Time),
Navigation_Time = mean(Navigation_Time),
Distance = mean(Distance),
Speed = mean(Speed),
Mean_Dwell = mean(Mean_Dwell),
Teleportations = mean(Teleportations))
all_target_data <- nav_data %>%
group_by(Target_Name) %>%
summarize(Total_Time = mean(Total_Time),
Orientation_Time = mean(Orientation_Time),
Navigation_Time = mean(Navigation_Time),
Distance = mean(Distance),
Speed = mean(Speed),
Mean_Dwell = mean(Mean_Dwell),
Teleportations = mean(Teleportations))
ct_range <- range(mean_data_corr$Total_Time)
navct_range <- range(mean_data_corr$Navigation_Time)
orict_range <- range(mean_data_corr$Orientation_Time)
speed_range <- range(mean_data_corr$Speed)
dt_range <- range(mean_data_corr$Distance)
dwell_range <- range(mean_data_corr$Mean_Dwell)
teleport_range <- range(mean_data_corr$Teleportations)
ct_iqr <- IQR(mean_data_corr$Total_Time)
navct_iqr <- IQR(mean_data_corr$Navigation_Time)
orict_iqr <- IQR(mean_data_corr$Orientation_Time)
speed_iqr <- IQR(mean_data_corr$Speed)
dt_iqr <- IQR(mean_data_corr$Distance)
dwell_iqr <- IQR(mean_data_corr$Mean_Dwell)
teleport_iqr <- IQR(mean_data_corr$Teleportations)
# Step 1: Identify all variables ending with "range"
range_variables <- ls(pattern = "range$")
# Step 2: Collect these variables into a list
range_variables_list <- lapply(variables, get)
# Step 1: Identify all variables ending with "range"
range_variables <- ls(pattern = "range$")
# Step 2: Collect these variables into a list
range_variables_list <- lapply(range_variables, get)
do.call(rbind.data.frame, range_variables_list)
View(range_variables_list)
# Step 1: Identify all variables ending with "range"
range_variables <- ls(pattern = "range$")
# Step 2: Collect these variables into a list
range_variables_list <- lapply(range_variables, get)
range_variables_list <- do.call(rbind.data.frame, range_variables_list)
# Step 1: Identify all variables ending with "range"
range_variables <- ls(pattern = "range$")
# Step 2: Collect these variables into a list
range_variables_list <- lapply(range_variables, get)
range_variables_list <- do.call(rbind.data.frame, range_variables_list)
colnames(range_variables_list) <- c("min","max")
# Step 1: Identify all variables ending with "range"
iqr_variables <- ls(pattern = "iqr$")
# Step 2: Collect these variables into a list
iqr_variables_list <- lapply(iqr_variables, get)
iqr_variables_list <- do.call(rbind.data.frame, iqr_variables_list)
colnames(iqr_variables_list) <- c("value")
View(iqr_variables_list)
# Step 1: Identify all variables ending with "range"
iqr_variables <- ls(pattern = "iqr$")
# Step 2: Collect these variables into a list
iqr_variables_list <- lapply(iqr_variables, get)
iqr_variables_list <- do.call(rbind.data.frame, iqr_variables_list)
colnames(iqr_variables_list) <- c("value")
ct_range <- range(mean_data_corr$Total_Time)
navct_range <- range(mean_data_corr$Navigation_Time)
orict_range <- range(mean_data_corr$Orientation_Time)
speed_range <- range(mean_data_corr$Speed)
dt_range <- range(mean_data_corr$Distance)
dwell_range <- range(mean_data_corr$Mean_Dwell)
teleport_range <- range(mean_data_corr$Teleportations)
range_variables_list$variable <- c("ct", "dt","dwell","navct","orict", "speed","teleport")
iqr_variables_list$variable <- c("ct", "dt","dwell","navct","orict", "speed","teleport")
ct_sd <- sd(mean_data_corr$Total_Time)
navct_sd <- sd(mean_data_corr$Navigation_Time)
orict_sd <- sd(mean_data_corr$Orientation_Time)
speed_sd <- sd(mean_data_corr$Speed)
dt_sd <- sd(mean_data_corr$Distance)
dwell_sd <- sd(mean_data_corr$Mean_Dwell)
teleport_sd <- sd(mean_data_corr$Teleportations)
# Step 1: Identify all variables ending with "range"
sd_variables <- ls(pattern = "sd$")
# Step 2: Collect these variables into a list
sd_variables_list <- lapply(sd_variables, get)
sd_variables_list <- do.call(rbind.data.frame, sd_variables_list)
colnames(sd_variables_list) <- c("value")
sd_variables_list$variable <- c("ct", "dt","dwell","navct","orict", "speed","teleport")
View(sd_variables_list)
# Step 2: Collect these variables into a list
sd_variables_list <- lapply(sd_variables, get)
sd_variables_list <- do.call(rbind.data.frame, sd_variables_list)
colnames(sd_variables_list) <- c("value")
sd_variables_list$variable <- c("ct", "dt","dwell","navct","orict", "speed","teleport")
```
ct_var <- var(mean_data_corr$Total_Time)
navct_var <- var(mean_data_corr$Navigation_Time)
orict_var <- var(mean_data_corr$Orientation_Time)
speed_var <- var(mean_data_corr$Speed)
dt_var <- var(mean_data_corr$Distance)
dwell_var <- var(mean_data_corr$Mean_Dwell)
teleport_var <- var(mean_data_corr$Teleportations)
# Step 1: Identify all variables ending with "range"
sd_variables <- ls(pattern = "var$")
# Step 2: Collect these variables into a list
var_variables_list <- lapply(var_variables, get)
# Step 1: Identify all variables ending with "range"
var_variables <- ls(pattern = "var$")
# Step 2: Collect these variables into a list
var_variables_list <- lapply(var_variables, get)
var_variables_list <- do.call(rbind.data.frame, var_variables_list)
colnames(var_variables_list) <- c("value")
var_variables_list$variable <- c("ct", "dt","dwell","navct","orict", "speed","teleport")
ct_var <- var(mean_data_corr$Total_Time)
navct_var <- var(mean_data_corr$Navigation_Time)
orict_var <- var(mean_data_corr$Orientation_Time)
speed_var <- var(mean_data_corr$Speed)
dt_var <- var(mean_data_corr$Distance)
dwell_var <- var(mean_data_corr$Mean_Dwell)
teleport_var <- var(mean_data_corr$Teleportations)
# Step 1: Identify all variables ending with "range"
var_variables <- ls(pattern = "var$")
# Step 2: Collect these variables into a list
var_variables_list <- lapply(var_variables, get)
var_variables_list <- do.call(rbind.data.frame, var_variables_list)
colnames(var_variables_list) <- c("value")
var_variables_list$variable <- c("ct", "dt","dwell","navct","orict", "speed","teleport")
View(var_variables_list)
ct_range <- range(mean_data_corr$Total_Time)
navct_range <- range(mean_data_corr$Navigation_Time)
orict_range <- range(mean_data_corr$Orientation_Time)
speed_range <- range(mean_data_corr$Speed)
dt_range <- range(mean_data_corr$Distance)
dwell_range <- range(mean_data_corr$Mean_Dwell)
teleport_range <- range(mean_data_corr$Teleportations)
ct_range$diff <- ct_range$max - ct_range$min
View(target_data)
View(all_target_data)
ct_range <- range(all_target_data$Total_Time)
navct_range <- range(all_target_data$Navigation_Time)
orict_range <- range(all_target_data$Orientation_Time)
speed_range <- range(all_target_data$Speed)
dt_range <- range(all_target_data$Distance)
dwell_range <- range(all_target_data$Mean_Dwell)
teleport_range <- range(all_target_data$Teleportations)
ct_range <- range(all_target_data$Total_Time)
navct_range <- range(all_target_data$Navigation_Time)
orict_range <- range(all_target_data$Orientation_Time)
speed_range <- range(all_target_data$Speed)
dt_range <- range(all_target_data$Distance)
dwell_range <- range(all_target_data$Mean_Dwell)
teleport_range <- range(all_target_data$Teleportations)
# Step 1: Identify all variables ending with "range"
range_variables <- ls(pattern = "range$")
# Step 2: Collect these variables into a list
range_variables_list <- lapply(range_variables, get)
range_variables_list <- do.call(rbind.data.frame, range_variables_list)
colnames(range_variables_list) <- c("min","max")
#range_variables_list$target <- c("automobile", "police","dwell","navct","orict", "speed","teleport")
View(all_target_data)
View(all_target_data)
sd_target_data <- nav_data %>%
group_by(Target_Name) %>%
summarize(Total_Time = sd(Total_Time),
Orientation_Time = sd(Orientation_Time),
Navigation_Time = sd(Navigation_Time),
Distance = sd(Distance),
Speed = sd(Speed),
Mean_Dwell = sd(Mean_Dwell),
Teleportations = sd(Teleportations))
View(sd_target_data)
var_target_data <- nav_data %>%
group_by(Target_Name) %>%
summarize(Total_Time = var(Total_Time),
Orientation_Time = var(Orientation_Time),
Navigation_Time = var(Navigation_Time),
Distance = var(Distance),
Speed = var(Speed),
Mean_Dwell = var(Mean_Dwell),
Teleportations = var(Teleportations))
View(var_target_data)
View(sd_variables_list)
View(var_variables_list)
View(sd_variables_list)
View(sd_target_data)
